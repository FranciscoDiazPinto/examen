# -*- coding: utf-8 -*-
"""examen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_KvFdO_ZwiOzCvl7m01noqtmHE-c0-70
"""

from datetime import datetime

precios_venta = {
    'A': 3800,
    'B': 3000,
    'C': 2800,
    'D': 3500,

}


departamentos = {
    'A': ['Disponible'] * 10,
    'B': ['Disponible'] * 10,
    'C': ['Disponible'] * 10,
    'D': ['Disponible'] * 10,

}

compradores = []

def valida_rut(rut):
    rut = rut.replace(".", "").replace("-", "")
    if len(rut) != 9 or not rut[:-1].isdigit():
        return False
    multiplicadores = [2, 3, 4, 5, 6, 7, 2, 3]
    total = sum(int(digito) * multiplicador for digito, multiplicador in zip(rut[:-1][::-1], multiplicadores))
    resto = total % 11
    digito_verificador = str(11 - resto)
    if digito_verificador == "11":
        digito_verificador = "0"
    elif digito_verificador == "10":
        digito_verificador = "K"
    return rut[-1].upper() == digito_verificador

def comprar_departamento():
    piso = int(input("Ingrese el número de piso: "))
    tipo = input("Ingrese el tipo de departamento (A, B, C, D): ").upper()

    if tipo not in ['A', 'B', 'C', 'D']:
        print("Tipo de departamento inválido.")
        return

    if piso < 1 or piso > 10:
        print("Número de piso inválido.")
        return

    departamento = tipo + str(piso)

    if departamentos[tipo][piso - 1] == 'Disponible':
        comprador_rut = input("Ingrese el RUN del comprador (sin guion ni puntos): ")
        if not valida_rut(comprador_rut):
            print("RUT inválido")
            return
        compradores.append({'RUN': comprador_rut, 'Departamento': departamento})
        departamentos[tipo][piso - 1] = 'X'
        print("Operación realizada correctamente.")
    else:
        print("El departamento no está disponible.")


def mostrar_departamentos_disponibles():
    print("Departamentos disponibles:")
    print("   | A | B | C | D |")
    for piso in range(10, 0, -1):
        disponibilidad = " | ".join([' ' if d == 'Disponible' else d for d in [departamentos[tipo][piso - 1] for tipo in ['A', 'B', 'C', 'D']]])
        print(f"{piso} |{disponibilidad}|")

def ver_listado_compradores():
    print("Listado de compradores:")
    for comprador in compradores:
        print(f"RUN: {comprador['RUN']}, Departamento: {comprador['Departamento']}")

def mostrar_ganancias_totales():
    print("Ganancias totales:")
    print("| Tipo de departamento | Cantidad de ventas | Total ventas |")
    print("------------------------------------------------------------------------------------------------")

    total_ventas = 0


    for tipo, estados in departamentos.items():
        cantidad_ventas = estados.count('X')
        total_ventas_tipo = precios_venta[tipo] * cantidad_ventas
        total_ventas += total_ventas_tipo

        print(f"| Tipo {tipo} {precios_venta[tipo]}UF   | {cantidad_ventas}                 | {total_ventas_tipo}UF   |")

    print("------------------------------------------------------------------------------------------------")
    print(f"Total ventas: UF: {total_ventas}")
    print(f"Ganancias Totales: UF: {total_ventas}")

def salir():
  print("esta saliendo del sistema")
  print("Francisco Diaz")
  print(datetime.today().strftime('%Y-%m-%d'))
def ejecutar_sistema():
    while True:
        mostrar_menu()
        opcion = input("Ingrese una opción: ")

        if opcion == '1':
            mostrar_departamentos_disponibles()
            comprar_departamento()
        elif opcion == '2':
            mostrar_departamentos_disponibles()
        elif opcion == '3':
            ver_listado_compradores()
        elif opcion == '4':
            mostrar_ganancias_totales()
        elif opcion == '5':
            salir()
            break
        else:
            print("Opción inválida. Intente nuevamente.")

def mostrar_menu():
    print("Menú:")
    print("1. Comprar departamento")
    print("2. Mostrar departamentos disponibles")
    print("3. Ver listado de compradores")
    print("4. Mostrar ganancias totales")
    print("5. Salir")

ejecutar_sistema()